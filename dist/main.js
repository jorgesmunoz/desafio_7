(()=>{var t={344:(t,r,s)=>{const o=s(860).Router(),{postCarrito:e,deleteCarrito:i,getProductosCarrito:a,postProductoCarrito:n,deleteProductoCarrito:c}=s(697);o.post("/",e),o.delete("/:id",i),o.get("/:id/productos",a),o.post("/:id/productos/:id_prod",n),o.delete("/:id/productos/:id_prod",c),t.exports=o},497:(t,r,s)=>{const o=s(860).Router(),{getProductos:e,getProductosId:i,postProducto:a,putProducto:n,deleteProducto:c}=s(168);o.get("/",e),o.get("/:id",i),o.post("/",a),o.put("/:id",n),o.delete("/:id",c),t.exports=o},697:(t,r,s)=>{const o=s(879);let{product:e}=s(168),i=new o("carrito.txt");t.exports={postCarrito:async(t,r)=>{if(t.body){const s=await i.save(t.body);return r.status(200).send(await i.getById(parseInt(s)))}return r.status(400).json({error:"Error al crear carrito"})},deleteCarrito:async(t,r)=>isNaN(parseInt(t.params.id))?r.status(400).json({error:"El parametro no es numerico"}):null===await i.getById(parseInt(t.params.id))?r.status(400).json({error:"Carrito no existe"}):r.status(200).json(await i.deleteById(parseInt(t.params.id))),getProductosCarrito:async(t,r)=>{const s=parseInt(t.params.id);if(isNaN(s))return r.status(400).json({error:"El parametro no es numerico"});r.status(200).json(await i.getAllProducts(s))},postProductoCarrito:async(t,r)=>{const s=parseInt(t.params.id),o=parseInt(t.params.id_prod);if(isNaN(s)||isNaN(o))return r.status(400).json({error:"El parametro no es numerico"});const a=await e.getById(o);if(null===a)return r.status(400).json({error:"El producto no se encuentra"});const n={idCarrito:s,producto:a},c=await i.put(n);return r.status(200).send(await i.getById(parseInt(c)))},deleteProductoCarrito:async(t,r)=>{const s=parseInt(t.params.id),o=parseInt(t.params.id_prod);if(isNaN(s)||isNaN(o))return r.status(400).json({error:"El parametro no es numerico"});if(null===await e.getById(o))return r.status(400).json({error:"El producto no se encuentra"});{const t={idCarrito:s,producto:o};return r.status(200).json(await i.deleteById(t))}}}},168:(t,r,s)=>{let o=new(s(975))("productos.txt");t.exports={getProductos:async(t,r)=>{r.status(200).json(await o.getAll())},getProductosId:async(t,r)=>isNaN(parseInt(t.params.id))?r.status(400).json({error:"El parametro no es numerico"}):null===await o.getById(parseInt(t.params.id))?r.status(400).json({error:"El producto no se encuentra"}):void r.status(200).json(await o.getById(parseInt(t.params.id))),postProducto:async(t,r)=>{const{name:s,description:e,code:i,picture:a,price:n,stock:c}=t.body;if(s&&e&&i&&a&&c){const t=await o.save({timestamp:Date.now(),name:s,description:e,code:i,picture:a,price:n,stock:c});return r.status(200).json(await o.getById(parseInt(t)))}return r.status(400).json({error:"Deben cargarse todos los campos del producto (name, description, code, picture, price, stock"})},putProducto:async(t,r)=>{const s=parseInt(t.params.id);if(isNaN(s))return r.status(400).json({error:"El parametro no es numerico"});const e=await o.getById(s);if(null===e)return r.status(400).json({error:"El producto no se encuentra"});for(let r in t.body)e[r]=t.body[r];const i=await o.put(e);return r.status(200).json(await o.getById(parseInt(i)))},deleteProducto:async(t,r)=>isNaN(parseInt(t.params.id))?r.status(400).json({error:"El parametro no es numerico"}):null===await o.getById(parseInt(t.params.id))?r.status(400).json({error:"El producto no se encuentra"}):r.status(200).json(await o.deleteById(parseInt(t.params.id))),product:o}},879:(t,r,s)=>{const{log:o}=s(206),e=s(147);class i{static id=0;static objects=[];constructor(t){this.archivo=t,this.id,this.timestamp,this.productos=[]}addId(){i.id+=1}async save(t){try{this.addId(),this.id=i.id,this.timestamp=Date.now();const t={id:this.id,timestamp:this.timestamp,productos:this.productos};i.objects.push(t),e.promises.writeFile(this.archivo,JSON.stringify(t,null,2))}catch(t){console.log("Error writing carrito")}return i.id}async put(t){try{this.id=t.idCarrito,this.timestamp=Date.now(),this.productos.push(t.producto);const r={id:this.id,timestamp:this.timestamp,productos:this.productos};e.promises.writeFile(this.archivo,JSON.stringify(r,null,2))}catch(t){console.log("Error writing file")}return this.id}async getById(t){try{return await e.promises.readFile(this.archivo)||null}catch(t){console.log("Error reading object")}}async getAllProducts(t){const r=i.objects[t-1];try{return r.productos}catch(t){console.log("Error getting all objects")}}async deleteById(t){const r=i.objects[t.idCarrito-1].productos;console.log(r);try{const s=r.find((r=>r.id===t.producto));this.productos=r.filter((t=>t.id!==s.id)),console.log(this.productos);const o={id:this.id,timestamp:this.timestamp,productos:this.productos};i.objects[t.idCarrito-1]=o,console.log(o),e.promises.writeFile(this.archivo,JSON.stringify(o,null,2))}catch(t){console.log("Error deleting an object")}}}t.exports=i},975:(t,r,s)=>{const o=s(147);class e{static id=0;constructor(t){this.archivo=t,this.objects=[]}addId(){e.id+=1}async save(t){try{this.addId(),t.id=e.id,this.objects.push(t),o.promises.writeFile(this.archivo,JSON.stringify(this.objects,null,2))}catch(t){console.log("Error writing file")}return e.id}async put(t){try{this.objects[t.id-1]={id:t.id,name:t.name,description:t.description,code:t.code,picture:t.picture,price:t.price,stock:t.stock},o.promises.writeFile(this.archivo,JSON.stringify(this.objects,null,2))}catch(t){console.log("Error writing file")}return t.id}async getById(t){try{return JSON.parse(await o.promises.readFile(this.archivo)).find((r=>r.id===t))||null}catch(t){console.log("Error reading object")}}async getAll(){try{return JSON.parse(await o.promises.readFile(this.archivo))}catch(t){console.log("Error getting all objects")}}async deleteAll(){try{this.objects=[],await o.promises.writeFile(this.archivo,JSON.stringify(this.objects,null,2)),console.log("All objects were deleted")}catch(t){console.log("Objects not deleted")}}async deleteById(t){try{let r=JSON.parse(await o.promises.readFile(this.archivo));const s=r.find((r=>r.id===t));this.objects=r.filter((t=>t.id!==s.id)),o.promises.writeFile(this.archivo,JSON.stringify(this.objects,null,2))}catch(t){console.log("Error deleting an object")}}}t.exports=e},860:t=>{"use strict";t.exports=require("express")},206:t=>{"use strict";t.exports=require("console")},147:t=>{"use strict";t.exports=require("fs")}},r={};function s(o){var e=r[o];if(void 0!==e)return e.exports;var i=r[o]={exports:{}};return t[o](i,i.exports,s),i.exports}(()=>{const t=s(860),r=t(),o=s(497),e=s(344);r.use(t.json()),r.use(t.urlencoded({extended:!0})),r.use("/api/productos",o),r.use("/api/carrito",e),r.use("*",((t,r)=>{r.status(301).send("forbidden!")})),r.listen(process.env.PORT||8080,(()=>{console.log("Server running on PORT: 8080")}))})()})();